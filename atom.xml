<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cczzrs Blog</title>
  
  <subtitle>从从的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cczzrs.me/"/>
  <updated>2019-04-25T00:24:57.000Z</updated>
  <id>http://cczzrs.me/</id>
  
  <author>
    <name>cczzrs</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python 后端 django rest framework(简称 drf) 开发</title>
    <link href="http://cczzrs.me/APP1/app1-2/"/>
    <id>http://cczzrs.me/APP1/app1-2/</id>
    <published>2019-04-25T00:24:57.000Z</published>
    <updated>2019-04-25T00:24:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="python-后端-django-rest-framework-简称-drf-开发"><a href="#python-后端-django-rest-framework-简称-drf-开发" class="headerlink" title="python 后端 django rest framework(简称 drf) 开发"></a>python 后端 django rest framework(简称 drf) 开发</h2><blockquote><h5 id="我这里只讲一些比较重要的难点，本人也是边学边开发的（codeing-是很快的，一半以上的时间都用来学习了）。"><a href="#我这里只讲一些比较重要的难点，本人也是边学边开发的（codeing-是很快的，一半以上的时间都用来学习了）。" class="headerlink" title="我这里只讲一些比较重要的难点，本人也是边学边开发的（codeing 是很快的，一半以上的时间都用来学习了）。"></a>我这里只讲一些比较重要的难点，本人也是边学边开发的（codeing 是很快的，一半以上的时间都用来学习了）。</h5></blockquote><blockquote><h4 id="http-请求进程流程概况：-http-请求-lt-gt-urls-py-中配置转发-lt-gt-views-py-对应处理类及方法-lt-gt-serializers-py-对应处理类及方法-lt-gt-DB-数据库"><a href="#http-请求进程流程概况：-http-请求-lt-gt-urls-py-中配置转发-lt-gt-views-py-对应处理类及方法-lt-gt-serializers-py-对应处理类及方法-lt-gt-DB-数据库" class="headerlink" title="http 请求进程流程概况： http 请求 &lt;=&gt; urls.py 中配置转发 &lt;=&gt; views.py 对应处理类及方法 &lt;=&gt; serializers.py 对应处理类及方法 &lt;=&gt; DB 数据库"></a>http 请求进程流程概况： http 请求 &lt;=&gt; urls.py 中配置转发 &lt;=&gt; views.py 对应处理类及方法 &lt;=&gt; serializers.py 对应处理类及方法 &lt;=&gt; DB 数据库</h4><h4 id="按照这个流程开发即快速又高效，前后打通之后，分分钟就能完成一个功能模块的增删改查需求（真的是分分钟哦），"><a href="#按照这个流程开发即快速又高效，前后打通之后，分分钟就能完成一个功能模块的增删改查需求（真的是分分钟哦），" class="headerlink" title="按照这个流程开发即快速又高效，前后打通之后，分分钟就能完成一个功能模块的增删改查需求（真的是分分钟哦），"></a>按照这个流程开发即快速又高效，前后打通之后，分分钟就能完成一个功能模块的增删改查需求（真的是分分钟哦），</h4><h4 id="请用-jwt-的身份认证，后台管理可以用-xadmin（目前只能支持-django2-0及以下版本），xadmin-模块的问题需要手动修复的。"><a href="#请用-jwt-的身份认证，后台管理可以用-xadmin（目前只能支持-django2-0及以下版本），xadmin-模块的问题需要手动修复的。" class="headerlink" title="请用 jwt 的身份认证，后台管理可以用 xadmin（目前只能支持 django2.0及以下版本），xadmin 模块的问题需要手动修复的。"></a>请用 jwt 的身份认证，后台管理可以用 xadmin（目前只能支持 django2.0及以下版本），xadmin 模块的问题需要手动修复的。</h4></blockquote><ul><li><h4 id="models-py-基本使用，对应的数据库的表"><a href="#models-py-基本使用，对应的数据库的表" class="headerlink" title="models.py 基本使用，对应的数据库的表"></a>models.py 基本使用，对应的数据库的表</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AbstractUser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAccount</span><span class="params">(AbstractUser)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    用户账户信息模型</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    GENDER = ((<span class="string">'man'</span>, <span class="string">u"男"</span>), (<span class="string">'girl'</span>, <span class="string">"女"</span>), (<span class="string">'null'</span>, <span class="string">"未知"</span>))</span><br><span class="line">    JOB = ((<span class="string">'boos'</span>, <span class="string">u"老板"</span>), (<span class="string">'white-collar'</span>, <span class="string">"白领"</span>), (<span class="string">'worker'</span>, <span class="string">"打工"</span>), (<span class="string">'student'</span>, <span class="string">"学生"</span>), (<span class="string">'hobos'</span>, <span class="string">"无业游民"</span>))</span><br><span class="line">    USERACCOUNT_STATUS = ((<span class="number">0</span>, <span class="string">u"失效"</span>), (<span class="number">1</span>, <span class="string">u"有效"</span>))</span><br><span class="line"></span><br><span class="line">    avatar = models.ImageField(upload_to=<span class="string">"images/avatar/"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">"头像"</span>)</span><br><span class="line">    bji = models.ImageField(upload_to=<span class="string">"images/bji/"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">"背景图"</span>)</span><br><span class="line">    username = models.CharField(max_length=<span class="number">16</span>, unique=<span class="literal">True</span>, blank=<span class="literal">False</span>, verbose_name=<span class="string">"昵称"</span>)</span><br><span class="line">    id = models.AutoField(db_column=<span class="string">'ID'</span>, primary_key=<span class="literal">True</span>)</span><br><span class="line">    password = models.CharField(max_length=<span class="number">256</span>, null=<span class="literal">True</span>, verbose_name=<span class="string">"密码"</span>)</span><br><span class="line">    mobile = models.CharField(max_length=<span class="number">11</span>, unique=<span class="literal">True</span>, blank=<span class="literal">False</span>, verbose_name=<span class="string">"手机号"</span>)</span><br><span class="line">    gender = models.CharField(max_length=<span class="number">4</span>, choices=GENDER, default=<span class="string">'null'</span>, verbose_name=<span class="string">"性别"</span>)</span><br><span class="line">    job = models.CharField(max_length=<span class="number">12</span>, choices=JOB, default=<span class="string">'wuyeyoumin'</span>, verbose_name=<span class="string">"职业属性"</span>)</span><br><span class="line">    grade = models.PositiveIntegerField(default=<span class="string">'0'</span>, verbose_name=<span class="string">"等级"</span>)</span><br><span class="line">    desc = models.TextField(max_length=<span class="number">15</span>, verbose_name=<span class="string">"个人简介"</span>)  <span class="comment"># 标准十五字</span></span><br><span class="line">    email = models.EmailField(max_length=<span class="number">254</span>, verbose_name=<span class="string">"邮箱"</span>)</span><br><span class="line">    active_level = models.PositiveIntegerField(default=<span class="number">1</span>, verbose_name=<span class="string">"活跃度"</span>)</span><br><span class="line">    status = models.PositiveIntegerField(default=<span class="number">1</span>, choices=USERACCOUNT_STATUS, verbose_name=<span class="string">"账号状态"</span>)</span><br><span class="line">    follows = models.PositiveIntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">"关注数"</span>)</span><br><span class="line">    fans = models.PositiveIntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">"粉丝数"</span>)</span><br><span class="line">    updated = models.DateTimeField(auto_now=<span class="literal">True</span>, verbose_name=<span class="string">"更新日期"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">"用户账户"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        ordering = (<span class="string">"-date_joined"</span>,)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">all_valid</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> UserAccount.objects.filter(status=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getValidUser</span><span class="params">(self, id)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> UserAccount.objects.filter(id=id, status=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 活跃度 +1</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">increase_active_level</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.active_level += <span class="number">1</span></span><br><span class="line">        self.save(update_fields=[<span class="string">'active_level'</span>, <span class="string">'updated'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 活跃度 -1</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lower_active_level</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.active_level -= <span class="number">1</span></span><br><span class="line">        self.save(update_fields=[<span class="string">'active_level'</span>, <span class="string">'updated'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关注数 +1</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">increase_follows</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.follows += <span class="number">1</span></span><br><span class="line">        self.save(update_fields=[<span class="string">'follows'</span>, <span class="string">'updated'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关注数 -1</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lower_follows</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.follows -= <span class="number">1</span></span><br><span class="line">        self.save(update_fields=[<span class="string">'follows'</span>, <span class="string">'updated'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 粉丝数 +1</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">increase_fans</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.fans += <span class="number">1</span></span><br><span class="line">        self.save(update_fields=[<span class="string">'fans'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 粉丝数 -1</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lower_fans</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.fans -= <span class="number">1</span></span><br><span class="line">        self.save(update_fields=[<span class="string">'fans'</span>])</span><br></pre></td></tr></table></figure></li><li><h4 id="serializers-py-基本使用-serializers-使用方式比较繁多，也灵活，后续再写文章详细讲解"><a href="#serializers-py-基本使用-serializers-使用方式比较繁多，也灵活，后续再写文章详细讲解" class="headerlink" title="serializers.py 基本使用(serializers 使用方式比较繁多，也灵活，后续再写文章详细讲解)"></a>serializers.py 基本使用(serializers 使用方式比较繁多，也灵活，后续再写文章详细讲解)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers</span><br><span class="line"><span class="keyword">from</span> rest_framework.validators <span class="keyword">import</span> UniqueValidator</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> get_user_model</span><br><span class="line"><span class="keyword">from</span> rest_framework_jwt.settings <span class="keyword">import</span> api_settings</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> apps.util <span class="keyword">import</span> VerifyCodeUtil</span><br><span class="line"></span><br><span class="line">User = get_user_model()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户注册序列化 - 用户注册</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserRegisterSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line"></span><br><span class="line">    mobile = serializers.CharField(</span><br><span class="line">            label=<span class="string">"手机号"</span>, required=<span class="literal">True</span>, allow_blank=<span class="literal">False</span>,</span><br><span class="line">            validators=[UniqueValidator(queryset=User.objects.filter(status=<span class="number">1</span>), message=<span class="string">"手机号已注册"</span>)])</span><br><span class="line"></span><br><span class="line">    code = serializers.CharField(required=<span class="literal">True</span>, write_only=<span class="literal">True</span>, max_length=<span class="number">4</span>, min_length=<span class="number">4</span>, label=<span class="string">"验证码"</span>,</span><br><span class="line">                                 error_messages=&#123;</span><br><span class="line">                                                <span class="string">"blank"</span>: <span class="string">"请输入验证码"</span>,</span><br><span class="line">                                                <span class="string">"required"</span>: <span class="string">"请输入验证码"</span>,</span><br><span class="line">                                                <span class="string">"max_length"</span>: <span class="string">"验证码格式错误"</span>,</span><br><span class="line">                                                <span class="string">"min_length"</span>: <span class="string">"验证码格式错误"</span></span><br><span class="line">                                                &#125;</span><br><span class="line">                                 )</span><br><span class="line">    username = serializers.CharField(read_only=<span class="literal">True</span>, label=<span class="string">"用户名"</span>)</span><br><span class="line">    <span class="comment"># token = serializers.CharField(read_only=True, label="token")</span></span><br><span class="line">    <span class="comment"># username = serializers.CharField(label="用户名", required=False,  # required=True, allow_blank=False,</span></span><br><span class="line">    <span class="comment">#                                  validators=[UniqueValidator(queryset=User.objects.filter(status=1),</span></span><br><span class="line">    <span class="comment">#                                  message="用户名已存在")])</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># password = serializers.CharField(min_length=6, max_length=16, label="密码", required=False,  # required=True,</span></span><br><span class="line">    <span class="comment">#                                  write_only=True, style=&#123;'input_type': 'password'&#125;,</span></span><br><span class="line">    <span class="comment">#                                  error_messages=&#123;"min_length": "密码最少为6位", "max_length": "密码最多为16位"&#125;</span></span><br><span class="line">    <span class="comment">#                                  )</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_code</span><span class="params">(self, code)</span>:</span></span><br><span class="line">        <span class="comment"># 验证码验证</span></span><br><span class="line">        VerifyCodeUtil.code_validate(serializers, self.initial_data[<span class="string">"mobile"</span>], self.initial_data[<span class="string">"code"</span>])</span><br><span class="line">        <span class="keyword">return</span> code</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = User</span><br><span class="line">        fields = (<span class="string">"id"</span>, <span class="string">"mobile"</span>, <span class="string">"code"</span>, <span class="string">"username"</span>)  <span class="comment"># , "token")  # , "password")</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">(self, validated_data)</span>:</span></span><br><span class="line">        <span class="keyword">del</span> validated_data[<span class="string">"code"</span>]  <span class="comment"># 新建用户不需要验证码</span></span><br><span class="line">        validated_data[<span class="string">"username"</span>] = validated_data[<span class="string">"mobile"</span>]  <span class="comment"># 用户名默认为手机号</span></span><br><span class="line">        user = super().create(validated_data)</span><br><span class="line">        user.mobile = validated_data[<span class="string">'mobile'</span>]</span><br><span class="line">        user.username = validated_data[<span class="string">'mobile'</span>]  <span class="comment"># 用户名默认为手机号</span></span><br><span class="line">        <span class="comment"># user.set_password(validated_data["password"])</span></span><br><span class="line">        user.save()</span><br><span class="line">        <span class="comment"># 生成jtw</span></span><br><span class="line">        <span class="comment"># jwt_payload_handler = api_settings.</span></span><br><span class="line">        <span class="comment"># token = 'token'</span></span><br><span class="line">        <span class="comment"># user.token = token</span></span><br><span class="line">        <span class="keyword">return</span> user</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户基本信息操作验证</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInformationDetailSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    <span class="comment"># _href = serializers.HyperlinkedIdentityField(view_name='importers-test-detail')</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = User</span><br><span class="line">        fields = (<span class="string">"avatar"</span>, <span class="string">"bji"</span>, <span class="string">"gender"</span>, <span class="string">"job"</span>, <span class="string">"desc"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self, user, validated_data)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> validated_data[<span class="string">"avatar"</span>]:</span><br><span class="line">            user.avatar = validated_data[<span class="string">"avatar"</span>]</span><br><span class="line">        <span class="keyword">if</span> validated_data[<span class="string">"bji"</span>]:</span><br><span class="line">            user.bji = validated_data[<span class="string">"bji"</span>]</span><br><span class="line">        <span class="keyword">if</span> validated_data[<span class="string">"gender"</span>]:</span><br><span class="line">            user.gender = validated_data[<span class="string">"gender"</span>]</span><br><span class="line">        <span class="keyword">if</span> validated_data[<span class="string">"desc"</span>]:</span><br><span class="line">            user.desc = validated_data[<span class="string">"desc"</span>]</span><br><span class="line">        <span class="keyword">if</span> validated_data[<span class="string">"job"</span>]:</span><br><span class="line">            user.job = validated_data[<span class="string">"job"</span>]</span><br><span class="line">        user.save()</span><br><span class="line">        <span class="keyword">return</span> user</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户敏感信息操作验证</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAccountDetailSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line"></span><br><span class="line">    mobile = serializers.CharField(label=<span class="string">"手机号"</span>, required=<span class="literal">False</span>,</span><br><span class="line">                                   validators=[UniqueValidator(queryset=User.objects.filter(status=<span class="number">1</span>), message=<span class="string">"手机号已注册"</span>)])</span><br><span class="line"></span><br><span class="line">    username = serializers.CharField(label=<span class="string">"用户名"</span>, required=<span class="literal">False</span>,</span><br><span class="line">                                     validators=[UniqueValidator(queryset=User.objects.filter(status=<span class="number">1</span>), message=<span class="string">"用户名已存在"</span>)])</span><br><span class="line"></span><br><span class="line">    password = serializers.CharField(min_length=<span class="number">6</span>, max_length=<span class="number">16</span>, required=<span class="literal">False</span>, label=<span class="string">"密码"</span>,</span><br><span class="line">                                     write_only=<span class="literal">True</span>, style=&#123;<span class="string">'input_type'</span>: <span class="string">'password'</span>&#125;,</span><br><span class="line">                                     error_messages=&#123;<span class="string">"min_length"</span>: <span class="string">"密码最少为6位"</span>, <span class="string">"max_length"</span>: <span class="string">"密码最多为16位"</span>&#125;</span><br><span class="line">                                     )</span><br><span class="line"></span><br><span class="line">    code = serializers.CharField(required=<span class="literal">True</span>, write_only=<span class="literal">True</span>, max_length=<span class="number">4</span>, min_length=<span class="number">4</span>, label=<span class="string">"验证码"</span>,</span><br><span class="line">                                 error_messages=&#123;</span><br><span class="line">                                                <span class="string">"blank"</span>: <span class="string">"请输入验证码"</span>,</span><br><span class="line">                                                <span class="string">"required"</span>: <span class="string">"请输入验证码"</span>,</span><br><span class="line">                                                <span class="string">"max_length"</span>: <span class="string">"验证码格式错误"</span>,</span><br><span class="line">                                                <span class="string">"min_length"</span>: <span class="string">"验证码格式错误"</span></span><br><span class="line">                                                &#125;</span><br><span class="line">                                 )</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = User</span><br><span class="line">        fields = (<span class="string">"username"</span>, <span class="string">"email"</span>, <span class="string">"mobile"</span>, <span class="string">"password"</span>, <span class="string">"code"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># def validate_mobile(self, mobile):</span></span><br><span class="line">    <span class="comment">#     # 新手机号验证</span></span><br><span class="line">    <span class="comment">#     VerifyCodeUtil.mobile_validate(serializers, mobile)</span></span><br><span class="line">    <span class="comment">#     return mobile</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_code</span><span class="params">(self, code)</span>:</span></span><br><span class="line">        <span class="comment"># 验证码验证</span></span><br><span class="line">        VerifyCodeUtil.code_validate(serializers, self.instance.mobile, code)</span><br><span class="line">        <span class="comment"># del attrs["code"]</span></span><br><span class="line">        <span class="keyword">return</span> code</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self, user, validated_data)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> validated_data.get(<span class="string">"mobile"</span>, <span class="string">""</span>):</span><br><span class="line">            user.mobile = validated_data[<span class="string">"mobile"</span>]</span><br><span class="line">        <span class="keyword">if</span> validated_data.get(<span class="string">"username"</span>, <span class="string">""</span>):</span><br><span class="line">            user.username = validated_data[<span class="string">"username"</span>]</span><br><span class="line">        <span class="keyword">if</span> validated_data.get(<span class="string">"email"</span>, <span class="string">""</span>):</span><br><span class="line">            user.email = validated_data[<span class="string">"email"</span>]</span><br><span class="line">        <span class="keyword">if</span> validated_data.get(<span class="string">"password"</span>, <span class="string">""</span>):</span><br><span class="line">            user.set_password(validated_data[<span class="string">"password"</span>])</span><br><span class="line">        user.save()</span><br><span class="line">        <span class="keyword">return</span> user</span><br></pre></td></tr></table></figure></li><li><h4 id="views-py-基本使用-views-使用方式比较繁多，也灵活，后续再写文章详细讲解"><a href="#views-py-基本使用-views-使用方式比较繁多，也灵活，后续再写文章详细讲解" class="headerlink" title="views.py 基本使用(views 使用方式比较繁多，也灵活，后续再写文章详细讲解)"></a>views.py 基本使用(views 使用方式比较繁多，也灵活，后续再写文章详细讲解)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.backends <span class="keyword">import</span> ModelBackend</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> get_user_model</span><br><span class="line"><span class="keyword">from</span> django.db.models <span class="keyword">import</span> Q</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> mixins, permissions</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> viewsets</span><br><span class="line"><span class="keyword">from</span> rest_framework.authentication <span class="keyword">import</span> SessionAuthentication</span><br><span class="line"><span class="keyword">from</span> rest_framework.pagination <span class="keyword">import</span> PageNumberPagination</span><br><span class="line"><span class="keyword">from</span> rest_framework.permissions <span class="keyword">import</span> BasePermission</span><br><span class="line"><span class="keyword">from</span> rest_framework_jwt.authentication <span class="keyword">import</span> JSONWebTokenAuthentication</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> account.serializers <span class="keyword">import</span> UserAccountDetailSerializer, SmsSerializer, UserRegisterSerializer, UserInformationDetailSerializer</span><br><span class="line"><span class="keyword">from</span> util <span class="keyword">import</span> VerifyCodeUtil</span><br><span class="line"></span><br><span class="line">User = get_user_model()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义用户验证规则 - 登录，用户名密码登录</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ToLogin</span><span class="params">(ModelBackend)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">authenticate</span><span class="params">(self, request, username=None, password=None, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            users = User.objects.filter(Q(username=username) | Q(mobile=username) | Q(email=username)).exclude(status=<span class="number">0</span>)</span><br><span class="line">            <span class="comment"># django的后台中密码加密验证调用 check_password(self, raw_password):</span></span><br><span class="line">            <span class="keyword">if</span> users:</span><br><span class="line">                <span class="keyword">for</span> user <span class="keyword">in</span> users:</span><br><span class="line">                    <span class="keyword">if</span> user.check_password(password):</span><br><span class="line">                        <span class="keyword">return</span> user</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义用户验证规则 - 登录，手机号验证码登录</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MobileToLogin</span><span class="params">(ModelBackend)</span>:</span></span><br><span class="line">    <span class="comment"># username 为手机号码，password 为验证码</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">authenticate</span><span class="params">(self, request, username=None, password=None, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> len(password) == <span class="number">4</span>:</span><br><span class="line">                <span class="comment"># 验证码验证</span></span><br><span class="line">                <span class="keyword">if</span> VerifyCodeUtil.mobile_code_validate(username, password):</span><br><span class="line">                    users = User.objects.filter(mobile=username)</span><br><span class="line">                    <span class="keyword">if</span> users:  <span class="comment"># 该手机号信息存在，返回有效用户信息</span></span><br><span class="line">                        <span class="keyword">for</span> user <span class="keyword">in</span> users:</span><br><span class="line">                            <span class="keyword">if</span> user.status == <span class="number">1</span>:</span><br><span class="line">                                <span class="keyword">return</span> user</span><br><span class="line">                    <span class="keyword">else</span>:  <span class="comment"># 该手机号信息不存在，创建用户信息并返回</span></span><br><span class="line">                        ur_data = &#123;<span class="string">'mobile'</span>: username, <span class="string">'code'</span>: password&#125;</span><br><span class="line">                        ur_i = UserRegisterSerializer(data=ur_data)</span><br><span class="line">                        <span class="keyword">if</span> ur_i.is_valid():</span><br><span class="line">                            <span class="keyword">return</span> ur_i.create(ur_i.validated_data)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分页</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BasePagination</span><span class="params">(PageNumberPagination)</span>:</span></span><br><span class="line"></span><br><span class="line">    page_size = <span class="number">2</span></span><br><span class="line">    page_size_query_param = <span class="string">'page_size'</span></span><br><span class="line">    page_query_param = <span class="string">"page"</span></span><br><span class="line">    max_page_size = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserRegisterViewset</span><span class="params">(mixins.ListModelMixin, mixins.CreateModelMixin, viewsets.GenericViewSet)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    用户注册</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    serializer_class = UserRegisterSerializer</span><br><span class="line"></span><br><span class="line">    <span class="comment"># permission_classes = (permissions.IsAuthenticated, )</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_permissions</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.action == <span class="string">"list"</span>:</span><br><span class="line">            <span class="keyword">return</span> [permissions.IsAdminUser()]</span><br><span class="line">        <span class="keyword">elif</span> self.action == <span class="string">"create"</span>:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> User.objects.filter(status=<span class="number">1</span>).order_by(<span class="string">'-date_joined'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户基本信息操作</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInformationViewSet</span><span class="params">(mixins.RetrieveModelMixin, mixins.UpdateModelMixin, viewsets.GenericViewSet)</span>:</span></span><br><span class="line"></span><br><span class="line">    serializer_class = UserInformationDetailSerializer</span><br><span class="line">    <span class="comment"># permission_classes = (permissions.IsAuthenticated, )</span></span><br><span class="line">    <span class="comment"># 标记需要进行jwt验证</span></span><br><span class="line">    authentication_classes = (JSONWebTokenAuthentication,)  <span class="comment"># , SessionAuthentication)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># def get_permissions(self):</span></span><br><span class="line">    <span class="comment">#     if self.action == "retrieve":</span></span><br><span class="line">    <span class="comment">#         return [permissions.IsAuthenticated()]</span></span><br><span class="line">    <span class="comment">#     elif self.action == "update":</span></span><br><span class="line">    <span class="comment">#         return [permissions.IsAuthenticated()]</span></span><br><span class="line">    <span class="comment">#     return [p() for p in self.permission_classes]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重写该方法，不管传什么id，都只返回当前用户</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_object</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.request.user</span><br><span class="line"></span><br><span class="line">    <span class="comment"># def get_queryset(self):</span></span><br><span class="line">    <span class="comment">#     return User.objects.filter(status=1).order_by('-date_joined')</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户敏感信息操作</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAccountViewSet</span><span class="params">(mixins.RetrieveModelMixin, mixins.UpdateModelMixin, viewsets.GenericViewSet)</span>:</span></span><br><span class="line"></span><br><span class="line">    serializer_class = UserAccountDetailSerializer</span><br><span class="line">    permission_classes = (permissions.IsAuthenticated, )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># def get_permissions(self):</span></span><br><span class="line">    <span class="comment">#     if self.action == "list":</span></span><br><span class="line">    <span class="comment">#         return [permissions.IsAdminUser()]</span></span><br><span class="line">    <span class="comment">#     elif self.action == "retrieve":</span></span><br><span class="line">    <span class="comment">#         return [permissions.IsAuthenticated()]</span></span><br><span class="line">    <span class="comment">#     elif self.action == "update":</span></span><br><span class="line">    <span class="comment">#         return [permissions.IsAuthenticated()]</span></span><br><span class="line">    <span class="comment">#     return [permissions.IsAdminUser()]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重写该方法，不管传什么id，都只返回当前用户</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_object</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.request.user</span><br><span class="line"></span><br><span class="line">    <span class="comment"># def get_queryset(self):</span></span><br><span class="line">    <span class="comment">#     return User.objects.filter(status=1).order_by('-date_joined')</span></span><br></pre></td></tr></table></figure></li><li><h4 id="urls-py-基本使用-urls-管理配置方式，这里只做参考"><a href="#urls-py-基本使用-urls-管理配置方式，这里只做参考" class="headerlink" title="urls.py 基本使用(urls 管理配置方式，这里只做参考)"></a>urls.py 基本使用(urls 管理配置方式，这里只做参考)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  ####### 赴梦网络</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> include, url</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> rest_framework_jwt.views <span class="keyword">import</span> obtain_jwt_token, refresh_jwt_token, verify_jwt_token</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> routers</span><br><span class="line"><span class="keyword">import</span> xadmin</span><br><span class="line"><span class="keyword">from</span> account.views <span class="keyword">import</span> SmsCodeViewSet, UserRegisterViewset, UserInformationViewSet, UserAccountViewSet</span><br><span class="line"><span class="keyword">from</span> security.views <span class="keyword">import</span> PrivacyViewset, ProposalViewset</span><br><span class="line"><span class="keyword">from</span> region.views <span class="keyword">import</span> UserRegionViewset, RegionViewset</span><br><span class="line"></span><br><span class="line">router = routers.DefaultRouter()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取验证码</span></span><br><span class="line">router.register(<span class="string">r'code'</span>, SmsCodeViewSet, base_name=<span class="string">'codes'</span>)</span><br><span class="line"><span class="comment"># 用户注册</span></span><br><span class="line">router.register(<span class="string">r'register'</span>, UserRegisterViewset, base_name=<span class="string">'register'</span>)</span><br><span class="line"><span class="comment"># 用户基本信息操作</span></span><br><span class="line">router.register(<span class="string">r'userInfo'</span>, UserInformationViewSet, base_name=<span class="string">'UserInfo'</span>)</span><br><span class="line"><span class="comment"># 用户敏感信息操作</span></span><br><span class="line">router.register(<span class="string">r'userAccount'</span>, UserAccountViewSet, base_name=<span class="string">'UserAccount'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 社区</span></span><br><span class="line">router.register(<span class="string">r'region'</span>, RegionViewset, base_name=<span class="string">'Region'</span>)</span><br><span class="line"><span class="comment"># 用户与社区</span></span><br><span class="line">router.register(<span class="string">r'userRegion'</span>, UserRegionViewset, base_name=<span class="string">'UserRegion'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 隐私 隐私管理</span></span><br><span class="line">router.register(<span class="string">r'privacy'</span>, PrivacyViewset, base_name=<span class="string">'Privacy'</span>)</span><br><span class="line"><span class="comment"># 建议箱  我的建议</span></span><br><span class="line">router.register(<span class="string">r'proposal'</span>, ProposalViewset, base_name=<span class="string">'Proposal'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># ADMIN URL 后台管理</span></span><br><span class="line">    <span class="comment"># path('admin/', admin.site.urls),</span></span><br><span class="line">    path(<span class="string">"xadmin/"</span>, xadmin.site.urls),</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 后台 api 查看测试</span></span><br><span class="line">    path(<span class="string">"api/"</span>, include(<span class="string">'rest_framework.urls'</span>, namespace=<span class="string">'rest_framework'</span>)),</span><br><span class="line">    <span class="comment"># path("api-token-auth/", views.obtain_auth_token),  # drf 自带的 token 认证</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># jwt token 认证</span></span><br><span class="line">    path(<span class="string">"api-token-auth/"</span>, obtain_jwt_token),  <span class="comment"># POST 获取令牌  # 登录获取令牌</span></span><br><span class="line">    path(<span class="string">"api-token-refresh/"</span>, refresh_jwt_token),  <span class="comment"># 刷新令牌 可以“刷新” 未过期的令牌以获得具有更新到期时间的全新令牌</span></span><br><span class="line">    path(<span class="string">"api-token-verify/"</span>, verify_jwt_token),  <span class="comment"># 验证令牌 在将受保护资源返回给用户之前等待JWT有效的确认</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 登录</span></span><br><span class="line">    path(<span class="string">"login/"</span>, obtain_jwt_token),  <span class="comment"># 登录获取令牌</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># API URLS</span></span><br><span class="line">    <span class="comment"># url("", include(router.urls)),</span></span><br><span class="line"></span><br><span class="line">] + router.urls  <span class="comment"># API URLS</span></span><br></pre></td></tr></table></figure></li><li><h4 id="settings-py-基本使用-settings-配置比较繁多，这里只做参考，后续再写文章详细讲解"><a href="#settings-py-基本使用-settings-配置比较繁多，这里只做参考，后续再写文章详细讲解" class="headerlink" title="settings.py 基本使用(settings 配置比较繁多，这里只做参考，后续再写文章详细讲解)"></a>settings.py 基本使用(settings 配置比较繁多，这里只做参考，后续再写文章详细讲解)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  ####### 赴梦网络</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">from</span> django.utils.translation <span class="keyword">import</span> ugettext_lazy <span class="keyword">as</span> _</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build paths inside the project like this: os.path.join(BASE_DIR, ...)</span></span><br><span class="line">BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入资源包</span></span><br><span class="line"><span class="comment"># sys.path.insert(0, os.path.join(BASE_DIR, "apps"))</span></span><br><span class="line"><span class="comment"># sys.path.insert(1, os.path.join(BASE_DIR, "extra_apps"))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Quick-start development settings - unsuitable for production</span></span><br><span class="line"><span class="comment"># See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SECURITY WARNING: keep the secret key used in production secret!</span></span><br><span class="line">SECRET_KEY = <span class="string">'***************************************************'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断当前操作系统</span></span><br><span class="line">this_os = <span class="string">'Windows'</span> <span class="keyword">not</span> <span class="keyword">in</span> list(platform.uname())</span><br><span class="line"></span><br><span class="line"><span class="comment"># SECURITY WARNING: don't run with debug turned on in production!</span></span><br><span class="line"><span class="comment"># 运行模式 DEBUG</span></span><br><span class="line">DEBUG = this_os</span><br><span class="line"></span><br><span class="line">ALLOWED_HOSTS = [<span class="string">'*'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Application definition</span></span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'rest_framework'</span>,</span><br><span class="line">    <span class="string">'rest_framework.authtoken'</span>,</span><br><span class="line">    <span class="string">'corsheaders'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'extra_apps.xadmin'</span>,</span><br><span class="line">    <span class="string">'crispy_forms'</span>,</span><br><span class="line">    <span class="string">'reversion'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'account'</span>,</span><br><span class="line">    <span class="string">'base'</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">'django.middleware.security.SecurityMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions.middleware.SessionMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.middleware.common.CommonMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.middleware.csrf.CsrfViewMiddleware'</span>,  <span class="comment">#</span></span><br><span class="line">    <span class="string">'django.contrib.auth.middleware.AuthenticationMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages.middleware.MessageMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.middleware.clickjacking.XFrameOptionsMiddleware'</span>,</span><br><span class="line">    <span class="string">'corsheaders.middleware.CorsMiddleware'</span>,  <span class="comment"># 设置浏览器跨域问题</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">ROOT_URLCONF = <span class="string">'fmwl.urls'</span></span><br><span class="line"></span><br><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)]</span><br><span class="line">        ,</span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">                <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">WSGI_APPLICATION = <span class="string">'fmwl.wsgi.application'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Database</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.1/ref/settings/#databases</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DATABASES = &#123;</span></span><br><span class="line"><span class="comment"># #     'default': &#123;</span></span><br><span class="line"><span class="comment"># #         'ENGINE': 'django.db.backends.sqlite3',</span></span><br><span class="line"><span class="comment"># #         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),</span></span><br><span class="line"><span class="comment"># #     &#125;</span></span><br><span class="line"><span class="comment"># # &#125;</span></span><br><span class="line"><span class="comment"># 使用 mysql 数据库</span></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'fmwl'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'0-0.life'</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: <span class="string">'3306'</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'init_command'</span>: <span class="string">"SET sql_mode='STRICT_TRANS_TABLES'"</span>,</span><br><span class="line">            <span class="string">'charset'</span>: <span class="string">'utf8mb4'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Password validation</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators</span></span><br><span class="line"></span><br><span class="line">AUTH_PASSWORD_VALIDATORS = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'django.contrib.auth.password_validation.MinimumLengthValidator'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'django.contrib.auth.password_validation.CommonPasswordValidator'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'django.contrib.auth.password_validation.NumericPasswordValidator'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Internationalization</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.1/topics/i18n/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># LANGUAGE_CODE = 'en-us'</span></span><br><span class="line">LANGUAGE_CODE = <span class="string">'zh-hans'</span>  <span class="comment"># 语言</span></span><br><span class="line"></span><br><span class="line">LANGUAGES = (</span><br><span class="line">    (<span class="string">'en'</span>, _(<span class="string">'English'</span>)),</span><br><span class="line">    (<span class="string">'zh-hans'</span>, _(<span class="string">'Chinese'</span>)),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># TIME_ZONE = 'UTC'</span></span><br><span class="line">TIME_ZONE = <span class="string">'Asia/Shanghai'</span>  <span class="comment"># 时区</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_L10N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># USE_TZ = True</span></span><br><span class="line">USE_TZ = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.1/howto/static-files/</span></span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态文件 static 集成路径</span></span><br><span class="line">STATIC_ROOT = <span class="string">r'/home/fmwl/static_data/static/'</span> <span class="keyword">if</span> this_os <span class="keyword">else</span> <span class="string">r'C:/Users/static_data/static/'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">STATICFILES_DIRS = (</span><br><span class="line">    os.path.join(BASE_DIR, <span class="string">'static'</span>),  <span class="comment"># 项目文件夹名称</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">AUTH_USER_MODEL = <span class="string">"account.UserAccount"</span>  <span class="comment"># 自定义用户账户模型</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># login 自定义登录验证，配置多个时有一个验证通过即可</span></span><br><span class="line">AUTHENTICATION_BACKENDS = &#123;</span><br><span class="line">     <span class="string">'account.views.ToLogin'</span>,</span><br><span class="line">     <span class="string">'account.views.MobileToLogin'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缓存过期时间</span></span><br><span class="line">REST_FRAMEWORK_EXTENSIONS = &#123;</span><br><span class="line">    <span class="string">'DEFAULT_CACHE_RESPONSE_TIMEOUT'</span>: <span class="number">60</span> * <span class="number">15</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LOGOUT_REDIRECT_URL = <span class="string">'/'</span>  <span class="comment"># 缺省的跳转路径 - 登出后</span></span><br><span class="line">LOGIN_REDIRECT_URL = <span class="string">'/'</span>  <span class="comment"># 缺省的跳转路径 - 登录后</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域</span></span><br><span class="line">CORS_ORIGIN_ALLOW_ALL = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">CORS_ORIGIN_WHITELIST = (</span><br><span class="line">    <span class="string">"localhost:3000"</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">CORS_ALLOW_METHODS = (</span><br><span class="line">    <span class="string">'GET'</span>,</span><br><span class="line">    <span class="string">'POST'</span>,</span><br><span class="line">    <span class="string">'PUT'</span>,</span><br><span class="line">    <span class="string">'PATCH'</span>,</span><br><span class="line">    <span class="string">'DELETE'</span>,</span><br><span class="line">    <span class="string">'OPTIONS'</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># JWT config</span></span><br><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="string">'DEFAULT_AUTHENTICATION_CLASSES'</span>: (</span><br><span class="line">        <span class="string">'rest_framework.authentication.BasicAuthentication'</span>,</span><br><span class="line">        <span class="string">'rest_framework.authentication.SessionAuthentication'</span>,</span><br><span class="line">        <span class="comment"># 'rest_framework.authentication.TokenAuthentication',  # 全局认证drf 自带的</span></span><br><span class="line">        <span class="string">'rest_framework_jwt.authentication.JSONWebTokenAuthentication'</span>,  <span class="comment"># 全局认证，开源 jwt</span></span><br><span class="line">    ),</span><br><span class="line">    <span class="string">'DEFAULT_PERMISSION_CLASSES'</span>: (</span><br><span class="line">        <span class="comment"># 允许的认证方式</span></span><br><span class="line">        <span class="string">'rest_framework.permissions.IsAuthenticated'</span>,  <span class="comment"># 已登录</span></span><br><span class="line">        <span class="comment"># 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'  # 未认证的只读</span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># JWT_AUTH = &#123;  # JWT_AUTH 默认配置</span></span><br><span class="line"><span class="comment">#     # see http://getblimp.github.io/django-rest-framework-jwt/</span></span><br><span class="line"><span class="comment">#     'JWT_ENCODE_HANDLER':</span></span><br><span class="line"><span class="comment">#     'rest_framework_jwt.utils.jwt_encode_handler',</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     'JWT_DECODE_HANDLER':</span></span><br><span class="line"><span class="comment">#     'rest_framework_jwt.utils.jwt_decode_handler',</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     'JWT_PAYLOAD_HANDLER':</span></span><br><span class="line"><span class="comment">#     'rest_framework_jwt.utils.jwt_payload_handler',</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     'JWT_PAYLOAD_GET_USER_ID_HANDLER':</span></span><br><span class="line"><span class="comment">#     'rest_framework_jwt.utils.jwt_get_user_id_from_payload_handler',</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     'JWT_RESPONSE_PAYLOAD_HANDLER':</span></span><br><span class="line"><span class="comment">#     'rest_framework_jwt.utils.jwt_response_payload_handler',</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     'JWT_SECRET_KEY': SECRET_KEY,</span></span><br><span class="line"><span class="comment">#     'JWT_GET_USER_SECRET_KEY': None,</span></span><br><span class="line"><span class="comment">#     'JWT_PUBLIC_KEY': None,</span></span><br><span class="line"><span class="comment">#     'JWT_PRIVATE_KEY': None,</span></span><br><span class="line"><span class="comment">#     'JWT_ALGORITHM': 'HS256',</span></span><br><span class="line"><span class="comment">#     'JWT_VERIFY': True,</span></span><br><span class="line"><span class="comment">#     'JWT_VERIFY_EXPIRATION': True,</span></span><br><span class="line"><span class="comment">#     'JWT_LEEWAY': 0,</span></span><br><span class="line"><span class="comment">#     'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=300),</span></span><br><span class="line"><span class="comment">#     'JWT_AUDIENCE': None,</span></span><br><span class="line"><span class="comment">#     'JWT_ISSUER': None,</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     'JWT_ALLOW_REFRESH': False,  # 启用令牌刷新功能。发行的令牌rest_framework_jwt.views.obtain_jwt_token将有一个orig_iat字段</span></span><br><span class="line"><span class="comment">#     'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     'JWT_AUTH_HEADER_PREFIX': 'JWT',</span></span><br><span class="line"><span class="comment">#     'JWT_AUTH_COOKIE': None,</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 成功获取认证后返回的数据格式</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jwt_response_payload_handler</span><span class="params">(token, user=None, request=None)</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"token"</span>: token,</span><br><span class="line">        <span class="string">"id"</span>: user.id,</span><br><span class="line">        <span class="string">"username"</span>: user.username,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">JWT_AUTH = &#123;</span><br><span class="line">    <span class="string">'JWT_RESPONSE_PAYLOAD_HANDLER'</span>: jwt_response_payload_handler,  <span class="comment"># 成功获取认证后返回的数据格式</span></span><br><span class="line">    <span class="string">'JWT_EXPIRATION_DELTA'</span>: datetime.timedelta(days=<span class="number">7</span>),  <span class="comment"># 验证令牌时所使用的令牌的有效时间</span></span><br><span class="line">    <span class="string">'JWT_ALLOW_REFRESH'</span>: <span class="literal">True</span>,  <span class="comment"># 启用令牌刷新功能。发行的令牌rest_framework_jwt.views.obtain_jwt_token将有一个orig_iat字段</span></span><br><span class="line">    <span class="string">'JWT_REFRESH_EXPIRATION_DELTA'</span>: datetime.timedelta(days=<span class="number">7</span>),  <span class="comment"># 刷新令牌时所使用的旧令牌的有效时间</span></span><br><span class="line">    <span class="string">'JWT_AUTH_HEADER_PREFIX'</span>: <span class="string">'JWT'</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;python-后端-django-rest-framework-简称-drf-开发&quot;&gt;&lt;a href=&quot;#python-后端-django-rest-framework-简称-drf-开发&quot; class=&quot;headerlink&quot; title=&quot;python 后端 
      
    
    </summary>
    
      <category term="APP1" scheme="http://cczzrs.me/categories/APP1/"/>
    
    
      <category term="python" scheme="http://cczzrs.me/tags/python/"/>
    
      <category term="django" scheme="http://cczzrs.me/tags/django/"/>
    
      <category term="drf" scheme="http://cczzrs.me/tags/drf/"/>
    
  </entry>
  
  <entry>
    <title>赴梦网络</title>
    <link href="http://cczzrs.me/uncategorized/app1-1/"/>
    <id>http://cczzrs.me/uncategorized/app1-1/</id>
    <published>2019-04-25T00:24:53.000Z</published>
    <updated>2019-04-25T00:24:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="赴梦网络"><a href="#赴梦网络" class="headerlink" title="赴梦网络"></a>赴梦网络</h1><blockquote><h5 id="成立的意义：在你奔赴梦想的漫长路途中，帮助你知晓当下中国环境体系的价值观，协助你更快的前行完成你的梦想。"><a href="#成立的意义：在你奔赴梦想的漫长路途中，帮助你知晓当下中国环境体系的价值观，协助你更快的前行完成你的梦想。" class="headerlink" title="成立的意义：在你奔赴梦想的漫长路途中，帮助你知晓当下中国环境体系的价值观，协助你更快的前行完成你的梦想。"></a>成立的意义：在你奔赴梦想的漫长路途中，帮助你知晓当下中国环境体系的价值观，协助你更快的前行完成你的梦想。</h5></blockquote><blockquote><h5 id="解决的社会问题：为那些正在迷茫的人，寻找他的方向，辅助他在奔赴梦想的漫长路途中前行。"><a href="#解决的社会问题：为那些正在迷茫的人，寻找他的方向，辅助他在奔赴梦想的漫长路途中前行。" class="headerlink" title="解决的社会问题：为那些正在迷茫的人，寻找他的方向，辅助他在奔赴梦想的漫长路途中前行。"></a>解决的社会问题：为那些正在迷茫的人，寻找他的方向，辅助他在奔赴梦想的漫长路途中前行。</h5></blockquote><blockquote><h5 id="理念：阐述事实现状，真诚，透明。"><a href="#理念：阐述事实现状，真诚，透明。" class="headerlink" title="理念：阐述事实现状，真诚，透明。"></a>理念：阐述事实现状，真诚，透明。</h5></blockquote><blockquote><h5 id="宗旨：节省你不必要浪费的时间，增加你的成就感。"><a href="#宗旨：节省你不必要浪费的时间，增加你的成就感。" class="headerlink" title="宗旨：节省你不必要浪费的时间，增加你的成就感。"></a>宗旨：节省你不必要浪费的时间，增加你的成就感。</h5></blockquote><blockquote><h5 id="理想结果：辅助解决社会存在的问题，促进社会人才培养，完善社会环境的良性循环。"><a href="#理想结果：辅助解决社会存在的问题，促进社会人才培养，完善社会环境的良性循环。" class="headerlink" title="理想结果：辅助解决社会存在的问题，促进社会人才培养，完善社会环境的良性循环。"></a>理想结果：辅助解决社会存在的问题，促进社会人才培养，完善社会环境的良性循环。</h5></blockquote><blockquote><h5 id="实际结果：帮助那些迷茫的人，寻找自己的方向，改善自己所处环境，提高自己的能力，奔赴自己的梦想。"><a href="#实际结果：帮助那些迷茫的人，寻找自己的方向，改善自己所处环境，提高自己的能力，奔赴自己的梦想。" class="headerlink" title="实际结果：帮助那些迷茫的人，寻找自己的方向，改善自己所处环境，提高自己的能力，奔赴自己的梦想。"></a>实际结果：帮助那些迷茫的人，寻找自己的方向，改善自己所处环境，提高自己的能力，奔赴自己的梦想。</h5></blockquote><h2 id="运营模式："><a href="#运营模式：" class="headerlink" title="运营模式："></a>运营模式：</h2><ul><li><h4 id="1-寻找迷茫的人"><a href="#1-寻找迷茫的人" class="headerlink" title="1 寻找迷茫的人"></a>1 寻找迷茫的人</h4><blockquote><h5 id="线上-APP-WEB-自助申请报名"><a href="#线上-APP-WEB-自助申请报名" class="headerlink" title="线上 APP/WEB 自助申请报名"></a>线上 APP/WEB 自助申请报名</h5><h5 id="线下市场及学校调查"><a href="#线下市场及学校调查" class="headerlink" title="线下市场及学校调查"></a>线下市场及学校调查</h5><h5 id="与父母沟通为孩子申请报名"><a href="#与父母沟通为孩子申请报名" class="headerlink" title="与父母沟通为孩子申请报名"></a>与父母沟通为孩子申请报名</h5><h5 id="用户推荐"><a href="#用户推荐" class="headerlink" title="用户推荐"></a>用户推荐</h5><h5 id="线上线下广告"><a href="#线上线下广告" class="headerlink" title="线上线下广告"></a>线上线下广告</h5></blockquote></li><li><h4 id="2-帮助他寻找自己的方向"><a href="#2-帮助他寻找自己的方向" class="headerlink" title="2 帮助他寻找自己的方向"></a>2 帮助他寻找自己的方向</h4><blockquote><h5 id="分析用户性格、喜好、环境、能力、想法等数据"><a href="#分析用户性格、喜好、环境、能力、想法等数据" class="headerlink" title="分析用户性格、喜好、环境、能力、想法等数据"></a>分析用户性格、喜好、环境、能力、想法等数据</h5><h5 id="推荐喜好、环境、学习、工作等"><a href="#推荐喜好、环境、学习、工作等" class="headerlink" title="推荐喜好、环境、学习、工作等"></a>推荐喜好、环境、学习、工作等</h5><h5 id="培养用户喜好、学习、能力、决策等"><a href="#培养用户喜好、学习、能力、决策等" class="headerlink" title="培养用户喜好、学习、能力、决策等"></a>培养用户喜好、学习、能力、决策等</h5><h5 id="用户选择推荐方案"><a href="#用户选择推荐方案" class="headerlink" title="用户选择推荐方案"></a>用户选择推荐方案</h5><h5 id="对接用户线上线下学习实施"><a href="#对接用户线上线下学习实施" class="headerlink" title="对接用户线上线下学习实施"></a>对接用户线上线下学习实施</h5></blockquote></li><li><h4 id="3-辅助他奔赴自己的梦想"><a href="#3-辅助他奔赴自己的梦想" class="headerlink" title="3 辅助他奔赴自己的梦想"></a>3 辅助他奔赴自己的梦想</h4><blockquote><h5 id="用户学习实施进度、问题、感想、想法等反馈"><a href="#用户学习实施进度、问题、感想、想法等反馈" class="headerlink" title="用户学习实施进度、问题、感想、想法等反馈"></a>用户学习实施进度、问题、感想、想法等反馈</h5><h5 id="辅助用户知晓提醒、互动、交流、助力、建议、习惯等的方式行为。"><a href="#辅助用户知晓提醒、互动、交流、助力、建议、习惯等的方式行为。" class="headerlink" title="辅助用户知晓提醒、互动、交流、助力、建议、习惯等的方式行为。"></a>辅助用户知晓提醒、互动、交流、助力、建议、习惯等的方式行为。</h5></blockquote></li></ul><h2 id="实施方案："><a href="#实施方案：" class="headerlink" title="实施方案："></a>实施方案：</h2><ol><li><h4 id="WEB-网站开发（3-个月）（进行中）"><a href="#WEB-网站开发（3-个月）（进行中）" class="headerlink" title="WEB 网站开发（3 个月）（进行中）"></a>WEB 网站开发（3 个月）（进行中）</h4></li><li><h4 id="APP-应用开发（4-个月）（进行中）"><a href="#APP-应用开发（4-个月）（进行中）" class="headerlink" title="APP 应用开发（4 个月）（进行中）"></a>APP 应用开发（4 个月）（进行中）</h4></li><li><h4 id="用户可选择推荐的方案-线上资源（持续）"><a href="#用户可选择推荐的方案-线上资源（持续）" class="headerlink" title="用户可选择推荐的方案 - 线上资源（持续）"></a>用户可选择推荐的方案 - 线上资源（持续）</h4></li><li><h4 id="用户可选择推荐的方案-线下活动（持续）"><a href="#用户可选择推荐的方案-线下活动（持续）" class="headerlink" title="用户可选择推荐的方案 - 线下活动（持续）"></a>用户可选择推荐的方案 - 线下活动（持续）</h4></li></ol><h2 id="给定条件："><a href="#给定条件：" class="headerlink" title="给定条件："></a>给定条件：</h2><h3 id="一阶段所需资金-90-万"><a href="#一阶段所需资金-90-万" class="headerlink" title="一阶段所需资金 90 万"></a>一阶段所需资金 90 万</h3><ol><li><h4 id="公司起步资金-10-万"><a href="#公司起步资金-10-万" class="headerlink" title="公司起步资金 10 万"></a>公司起步资金 10 万</h4></li><li><h4 id="实施方案起步资金-20-万"><a href="#实施方案起步资金-20-万" class="headerlink" title="实施方案起步资金 20 万"></a>实施方案起步资金 20 万</h4></li><li><h4 id="模式完善资金-30-万"><a href="#模式完善资金-30-万" class="headerlink" title="模式完善资金 30 万"></a>模式完善资金 30 万</h4></li><li><h4 id="运营推广资金最低-30-万"><a href="#运营推广资金最低-30-万" class="headerlink" title="运营推广资金最低 30 万"></a>运营推广资金最低 30 万</h4></li></ol><h3 id="二阶段所需资金-50-万"><a href="#二阶段所需资金-50-万" class="headerlink" title="二阶段所需资金 50 万"></a>二阶段所需资金 50 万</h3><ol><li><h4 id="模式完善资金-30-万-1"><a href="#模式完善资金-30-万-1" class="headerlink" title="模式完善资金 30 万"></a>模式完善资金 30 万</h4></li><li><h4 id="运营推广资金-20-万"><a href="#运营推广资金-20-万" class="headerlink" title="运营推广资金 20 万"></a>运营推广资金 20 万</h4></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;赴梦网络&quot;&gt;&lt;a href=&quot;#赴梦网络&quot; class=&quot;headerlink&quot; title=&quot;赴梦网络&quot;&gt;&lt;/a&gt;赴梦网络&lt;/h1&gt;&lt;blockquote&gt;
&lt;h5 id=&quot;成立的意义：在你奔赴梦想的漫长路途中，帮助你知晓当下中国环境体系的价值观，协助你更快的前
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>更高效、更快速、更少资源的方式从 0 开发 APP</title>
    <link href="http://cczzrs.me/APP/app1/"/>
    <id>http://cczzrs.me/APP/app1/</id>
    <published>2019-04-23T20:03:45.000Z</published>
    <updated>2019-04-23T20:03:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="更高效、更快速、更少资源的方式从-0-开发-APP"><a href="#更高效、更快速、更少资源的方式从-0-开发-APP" class="headerlink" title="更高效、更快速、更少资源的方式从 0 开发 APP"></a><a href="http://cczzrs.me/">更高效、更快速、更少资源的方式从 0 开发 APP</a></h2><blockquote><h5 id="背景：经过许久的询问考察：找人代做成本太高（对，很穷），不好把控。并且没有找到愿意帮助我的小伙伴一起开发，自己也不会分身。所以决定硬着头皮自己开发，本人-java-三年，熟悉-python"><a href="#背景：经过许久的询问考察：找人代做成本太高（对，很穷），不好把控。并且没有找到愿意帮助我的小伙伴一起开发，自己也不会分身。所以决定硬着头皮自己开发，本人-java-三年，熟悉-python" class="headerlink" title="背景：经过许久的询问考察：找人代做成本太高（对，很穷），不好把控。并且没有找到愿意帮助我的小伙伴一起开发，自己也不会分身。所以决定硬着头皮自己开发，本人 java 三年，熟悉 python"></a>背景：经过许久的询问考察：找人代做成本太高（对，很穷），不好把控。并且没有找到愿意帮助我的小伙伴一起开发，自己也不会分身。所以决定硬着头皮自己开发，本人 java 三年，熟悉 python</h5></blockquote><blockquote><h5 id="当下自己的给定条件：两个月时间，一台电脑，一个我（当然我很多地方是不懂的，这都需要边学边做。）"><a href="#当下自己的给定条件：两个月时间，一台电脑，一个我（当然我很多地方是不懂的，这都需要边学边做。）" class="headerlink" title="当下自己的给定条件：两个月时间，一台电脑，一个我（当然我很多地方是不懂的，这都需要边学边做。）"></a>当下自己的给定条件：两个月时间，一台电脑，一个我（当然我很多地方是不懂的，这都需要边学边做。）</h5></blockquote><h2 id="第一步，先整理产品大纲文档，Visio图，-产品技术架构文档，功能明细文档，"><a href="#第一步，先整理产品大纲文档，Visio图，-产品技术架构文档，功能明细文档，" class="headerlink" title="第一步，先整理产品大纲文档，Visio图， 产品技术架构文档，功能明细文档，"></a>第一步，先整理产品大纲文档，Visio图， 产品技术架构文档，功能明细文档，</h2><blockquote><h5 id="这里简单介绍一下我的技术架构：开发语言当然选择快速高效的-python，数据库-mysql，后台架构-django-rest-framework-简称-drf-，APP-开发语言使用-dart-框架当然是-flutter。选型初衷是-快速，高效，方便的开发-APP-。关于他们的选择它们好处这里不多说了，自行百度即可。"><a href="#这里简单介绍一下我的技术架构：开发语言当然选择快速高效的-python，数据库-mysql，后台架构-django-rest-framework-简称-drf-，APP-开发语言使用-dart-框架当然是-flutter。选型初衷是-快速，高效，方便的开发-APP-。关于他们的选择它们好处这里不多说了，自行百度即可。" class="headerlink" title="这里简单介绍一下我的技术架构：开发语言当然选择快速高效的 python，数据库 mysql，后台架构 django rest framework(简称 drf)，APP 开发语言使用 dart 框架当然是 flutter。选型初衷是 快速，高效，方便的开发 APP 。关于他们的选择它们好处这里不多说了，自行百度即可。"></a>这里简单介绍一下我的技术架构：开发语言当然选择快速高效的 python，数据库 mysql，后台架构 django rest framework(简称 drf)，APP 开发语言使用 dart 框架当然是 flutter。选型初衷是 <strong>快速，高效，方便的开发 APP</strong> 。关于他们的选择它们好处这里不多说了，自行百度即可。</h5><h5 id="这里简单介绍一下我的功能明细：-社区，好友，消息，我的，金库，短视频等。"><a href="#这里简单介绍一下我的功能明细：-社区，好友，消息，我的，金库，短视频等。" class="headerlink" title="这里简单介绍一下我的功能明细： 社区，好友，消息，我的，金库，短视频等。"></a>这里简单介绍一下我的功能明细： 社区，好友，消息，我的，金库，短视频等。</h5></blockquote><h2 id="第二步，搭建环境，快速开发-APP-后台，"><a href="#第二步，搭建环境，快速开发-APP-后台，" class="headerlink" title="第二步，搭建环境，快速开发 APP 后台，"></a>第二步，搭建环境，快速开发 APP 后台，</h2><ul><li><h5 id="需要搭建的基本环境（这些安装都比较简单，请自行安装）：mysql-5-5-python3-pip-django"><a href="#需要搭建的基本环境（这些安装都比较简单，请自行安装）：mysql-5-5-python3-pip-django" class="headerlink" title="需要搭建的基本环境（这些安装都比较简单，请自行安装）：mysql-5.5 python3 pip django"></a>需要搭建的基本环境（这些安装都比较简单，请自行安装）：<code>mysql-5.5</code> <code>python3</code> <code>pip</code> <code>django</code></h5></li><li><h5 id="主要开发工具（这些安装都比较简单，请自行安装）：Navicat-pycharm-Postman-fiddler4-Xshell-6-Notepad-Android-Studio"><a href="#主要开发工具（这些安装都比较简单，请自行安装）：Navicat-pycharm-Postman-fiddler4-Xshell-6-Notepad-Android-Studio" class="headerlink" title="主要开发工具（这些安装都比较简单，请自行安装）：Navicat pycharm Postman fiddler4 Xshell 6 Notepad++ Android Studio"></a>主要开发工具（这些安装都比较简单，请自行安装）：<code>Navicat</code> <code>pycharm</code> <code>Postman</code> <code>fiddler4</code> <code>Xshell 6</code> <code>Notepad++</code> <code>Android Studio</code></h5></li><li><h5 id="首先介绍几个平台：LeanCloud一站式后端服务，-Vulte云服务器，-GitHub代码仓库（还有很多功能），-DockerHub镜像仓库（还有很多功能），Aliyun阿里云"><a href="#首先介绍几个平台：LeanCloud一站式后端服务，-Vulte云服务器，-GitHub代码仓库（还有很多功能），-DockerHub镜像仓库（还有很多功能），Aliyun阿里云" class="headerlink" title="首先介绍几个平台：LeanCloud一站式后端服务， Vulte云服务器， GitHub代码仓库（还有很多功能）， DockerHub镜像仓库（还有很多功能），Aliyun阿里云"></a>首先介绍几个平台：<strong><a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>一站式后端服务</strong>， <a href="https://vultr.com/" target="_blank" rel="noopener">Vulte</a>云服务器， <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>代码仓库（还有很多功能）， <a href="https://hub.docker.com/" target="_blank" rel="noopener">DockerHub</a>镜像仓库（还有很多功能），<a href="https://aliyun.com/" target="_blank" rel="noopener">Aliyun</a>阿里云</h5><ul><li><h5 id="LeanCloud一站式后端服务，如果你一穷二白，要求不高，那么前期选择-LeanCloud-是非常非常不错的。LeanCloud-官网介绍的很清楚，这里不说了。（这里我使用了双路实现以备不时之需。我还选择了-Vulte云服务器和自己搭建-mysql-，）"><a href="#LeanCloud一站式后端服务，如果你一穷二白，要求不高，那么前期选择-LeanCloud-是非常非常不错的。LeanCloud-官网介绍的很清楚，这里不说了。（这里我使用了双路实现以备不时之需。我还选择了-Vulte云服务器和自己搭建-mysql-，）" class="headerlink" title="LeanCloud一站式后端服务，如果你一穷二白，要求不高，那么前期选择 LeanCloud 是非常非常不错的。LeanCloud 官网介绍的很清楚，这里不说了。（这里我使用了双路实现以备不时之需。我还选择了 Vulte云服务器和自己搭建 mysql ，）"></a><a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>一站式后端服务，如果你一穷二白，要求不高，那么前期选择 <a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> 是非常非常不错的。<a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> 官网介绍的很清楚，这里不说了。（这里我使用了双路实现以备不时之需。我还选择了 <a href="https://vultr.com/" target="_blank" rel="noopener">Vulte</a>云服务器和自己搭建 mysql ，）</h5></li><li><h5 id="Vulte云服务器，选择-Vulte-是因为很方便且比较便宜（最便宜的有2-5美元一个月的（有时候有）），"><a href="#Vulte云服务器，选择-Vulte-是因为很方便且比较便宜（最便宜的有2-5美元一个月的（有时候有）），" class="headerlink" title="Vulte云服务器，选择 Vulte 是因为很方便且比较便宜（最便宜的有2.5美元一个月的（有时候有）），"></a><a href="https://vultr.com/" target="_blank" rel="noopener">Vulte</a>云服务器，选择 <a href="https://vultr.com/" target="_blank" rel="noopener">Vulte</a> 是因为很方便且比较便宜（最便宜的有2.5美元一个月的（有时候有）），</h5></li><li><h5 id="GitHub作为开发的代码仓库，Webhooks-等。"><a href="#GitHub作为开发的代码仓库，Webhooks-等。" class="headerlink" title="GitHub作为开发的代码仓库，Webhooks 等。"></a><a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>作为开发的代码仓库，Webhooks 等。</h5></li><li><h5 id="DockerHub镜像仓库，作为服务器部署的镜像仓库，自动构建镜像，Webhooks-等。（关于服务器的开发部署及工具安装都是用的-Docker-进行部署及安装的）"><a href="#DockerHub镜像仓库，作为服务器部署的镜像仓库，自动构建镜像，Webhooks-等。（关于服务器的开发部署及工具安装都是用的-Docker-进行部署及安装的）" class="headerlink" title="DockerHub镜像仓库，作为服务器部署的镜像仓库，自动构建镜像，Webhooks 等。（关于服务器的开发部署及工具安装都是用的 Docker 进行部署及安装的）"></a><a href="https://hub.docker.com/" target="_blank" rel="noopener">DockerHub</a>镜像仓库，作为服务器部署的镜像仓库，自动构建镜像，Webhooks 等。（关于服务器的开发部署及工具安装都是用的 Docker 进行部署及安装的）</h5></li><li><h5 id="Aliyun阿里云，我这里只用了域名管理。其实阿里云上什么都有，但是对我来说还是有些贵（真的很穷），所以有些东西选择了别的平台的。"><a href="#Aliyun阿里云，我这里只用了域名管理。其实阿里云上什么都有，但是对我来说还是有些贵（真的很穷），所以有些东西选择了别的平台的。" class="headerlink" title="Aliyun阿里云，我这里只用了域名管理。其实阿里云上什么都有，但是对我来说还是有些贵（真的很穷），所以有些东西选择了别的平台的。"></a><a href="https://aliyun.com/" target="_blank" rel="noopener">Aliyun</a>阿里云，我这里只用了域名管理。其实阿里云上什么都有，但是对我来说还是有些贵（真的很穷），所以有些东西选择了别的平台的。</h5></li></ul><h3 id="现在进行后端-django-rest-framework-简称-drf-开发"><a href="#现在进行后端-django-rest-framework-简称-drf-开发" class="headerlink" title="现在进行后端 django rest framework(简称 drf) 开发"></a>现在进行后端 django rest framework(简称 drf) 开发</h3><h5 id="我这里只讲一些比较重要的难点，本人也是边学边开发的（codeing-是很快的，一半以上的时间都用来学习了）。"><a href="#我这里只讲一些比较重要的难点，本人也是边学边开发的（codeing-是很快的，一半以上的时间都用来学习了）。" class="headerlink" title="我这里只讲一些比较重要的难点，本人也是边学边开发的（codeing 是很快的，一半以上的时间都用来学习了）。"></a><a href="/APP1/app1-2">我这里只讲一些比较重要的难点，本人也是边学边开发的（codeing 是很快的，一半以上的时间都用来学习了）。</a></h5></li></ul><p>##### </p><p>##### </p><p>##### </p><h3 id="第二步，持续运营、维护、更新-APP，"><a href="#第二步，持续运营、维护、更新-APP，" class="headerlink" title="第二步，持续运营、维护、更新 APP，"></a>第二步，持续运营、维护、更新 APP，</h3><h3 id="第三步，突出-APP-特点，丰富特点功能，打造该特点的社区，"><a href="#第三步，突出-APP-特点，丰富特点功能，打造该特点的社区，" class="headerlink" title="第三步，突出 APP 特点，丰富特点功能，打造该特点的社区，"></a>第三步，突出 APP 特点，丰富特点功能，打造该特点的社区，</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;更高效、更快速、更少资源的方式从-0-开发-APP&quot;&gt;&lt;a href=&quot;#更高效、更快速、更少资源的方式从-0-开发-APP&quot; class=&quot;headerlink&quot; title=&quot;更高效、更快速、更少资源的方式从 0 开发 APP&quot;&gt;&lt;/a&gt;&lt;a href=&quot;ht
      
    
    </summary>
    
      <category term="APP" scheme="http://cczzrs.me/categories/APP/"/>
    
    
      <category term="APP" scheme="http://cczzrs.me/tags/APP/"/>
    
      <category term="开发APP" scheme="http://cczzrs.me/tags/%E5%BC%80%E5%8F%91APP/"/>
    
  </entry>
  
  <entry>
    <title>一个有梦想的 idea</title>
    <link href="http://cczzrs.me/%E4%B8%80%E4%B8%AA%E6%9C%89%E6%A2%A6%E6%83%B3%E7%9A%84-idea/app/"/>
    <id>http://cczzrs.me/一个有梦想的-idea/app/</id>
    <published>2019-04-23T19:03:45.000Z</published>
    <updated>2019-04-23T19:03:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一个有梦想的-idea-是需要长久计划的，结合当下自己的给定条件进行实施。"><a href="#一个有梦想的-idea-是需要长久计划的，结合当下自己的给定条件进行实施。" class="headerlink" title="一个有梦想的 idea 是需要长久计划的，结合当下自己的给定条件进行实施。"></a>一个有梦想的 idea 是需要长久计划的，结合当下自己的给定条件进行实施。</h2><h3 id="社会现状："><a href="#社会现状：" class="headerlink" title="社会现状："></a>社会现状：</h3><ul><li><h4 id="这些孩子没有得到当下社会他应该得到的基本服务保障。比如…"><a href="#这些孩子没有得到当下社会他应该得到的基本服务保障。比如…" class="headerlink" title="这些孩子没有得到当下社会他应该得到的基本服务保障。比如…"></a>这些孩子没有得到当下社会他应该得到的基本服务保障。比如…</h4></li></ul><h2 id="第一阶段，成就一个独特-APP-社区（），（计划-3-个月）"><a href="#第一阶段，成就一个独特-APP-社区（），（计划-3-个月）" class="headerlink" title="第一阶段，成就一个独特 APP 社区（），（计划 3 个月）"></a>第一阶段，成就一个独特 APP 社区（），（计划 3 个月）</h2><ul><li><h3 id="第一步，开发-APP，"><a href="#第一步，开发-APP，" class="headerlink" title="第一步，开发 APP，"></a>第一步，开发 APP，</h3><blockquote><h4 id="由于当下自己的给定条件极其有限，所有决定自己从-0-开发，持续运营。那么问题来了，如何用当下自己一点点资源（一个脑袋），快速高效的开发出一款-APP-呢？"><a href="#由于当下自己的给定条件极其有限，所有决定自己从-0-开发，持续运营。那么问题来了，如何用当下自己一点点资源（一个脑袋），快速高效的开发出一款-APP-呢？" class="headerlink" title="由于当下自己的给定条件极其有限，所有决定自己从 0 开发，持续运营。那么问题来了，如何用当下自己一点点资源（一个脑袋），快速高效的开发出一款 APP 呢？"></a>由于当下自己的给定条件极其有限，所有决定自己从 0 开发，持续运营。那么问题来了，如何用当下自己一点点资源（一个脑袋），快速高效的开发出一款 APP 呢？</h4></blockquote><h4 id="更高效、更快速、更少资源的方式从-0-开发-APP"><a href="#更高效、更快速、更少资源的方式从-0-开发-APP" class="headerlink" title="更高效、更快速、更少资源的方式从 0 开发 APP"></a><a href="/APP/app1/">更高效、更快速、更少资源的方式从 0 开发 APP</a></h4></li><li><h3 id="第二步，持续运营、维护、更新-APP，"><a href="#第二步，持续运营、维护、更新-APP，" class="headerlink" title="第二步，持续运营、维护、更新 APP，"></a>第二步，持续运营、维护、更新 APP，</h3></li><li><h3 id="第三步，突出-APP-特点，丰富特点功能，打造该特点的社区，"><a href="#第三步，突出-APP-特点，丰富特点功能，打造该特点的社区，" class="headerlink" title="第三步，突出 APP 特点，丰富特点功能，打造该特点的社区，"></a>第三步，突出 APP 特点，丰富特点功能，打造该特点的社区，</h3></li></ul><h2 id="第二阶段，成就一个智能语音助手，（计划-3-个月）"><a href="#第二阶段，成就一个智能语音助手，（计划-3-个月）" class="headerlink" title="第二阶段，成就一个智能语音助手，（计划 3 个月）"></a>第二阶段，成就一个智能语音助手，（计划 3 个月）</h2><ul><li><h3 id="第一步，开发语音助手软件（RNN-（神经网络）养成计划），"><a href="#第一步，开发语音助手软件（RNN-（神经网络）养成计划），" class="headerlink" title="第一步，开发语音助手软件（RNN （神经网络）养成计划），"></a>第一步，开发语音助手软件（RNN （神经网络）养成计划），</h3></li><li><h3 id="第二步，开发语音助手硬件（目前已有’小米小爱同学触屏版’），"><a href="#第二步，开发语音助手硬件（目前已有’小米小爱同学触屏版’），" class="headerlink" title="第二步，开发语音助手硬件（目前已有’小米小爱同学触屏版’），"></a>第二步，开发语音助手硬件（目前已有’小米小爱同学触屏版’），</h3></li></ul><h2 id="第三阶段，APP-与-智能语音助手的结合使用，（计划-3-个月）"><a href="#第三阶段，APP-与-智能语音助手的结合使用，（计划-3-个月）" class="headerlink" title="第三阶段，APP 与 智能语音助手的结合使用，（计划 3 个月）"></a>第三阶段，APP 与 智能语音助手的结合使用，（计划 3 个月）</h2><ul><li><h3 id="第一步，结合使用的功能场景（逻辑提醒，选择提醒，生活生理指导，在线受教，就医指导，就业指导等），"><a href="#第一步，结合使用的功能场景（逻辑提醒，选择提醒，生活生理指导，在线受教，就医指导，就业指导等），" class="headerlink" title="第一步，结合使用的功能场景（逻辑提醒，选择提醒，生活生理指导，在线受教，就医指导，就业指导等），"></a>第一步，结合使用的功能场景（逻辑提醒，选择提醒，生活生理指导，在线受教，就医指导，就业指导等），</h3></li><li><h3 id="第二步，结合使用的功能场景的功能服务，"><a href="#第二步，结合使用的功能场景的功能服务，" class="headerlink" title="第二步，结合使用的功能场景的功能服务，"></a>第二步，结合使用的功能场景的功能服务，</h3></li><li><h3 id="第三步，测试场景的功能服务，愿景（选择一个贫困的村庄，每家投放一个产品，记录下他们的生活方式，劳动成果，劳动价值，劳动特色，劳动潜能等。从而大数据分析出提高劳动价值的脱贫发展计划，）"><a href="#第三步，测试场景的功能服务，愿景（选择一个贫困的村庄，每家投放一个产品，记录下他们的生活方式，劳动成果，劳动价值，劳动特色，劳动潜能等。从而大数据分析出提高劳动价值的脱贫发展计划，）" class="headerlink" title="第三步，测试场景的功能服务，愿景（选择一个贫困的村庄，每家投放一个产品，记录下他们的生活方式，劳动成果，劳动价值，劳动特色，劳动潜能等。从而大数据分析出提高劳动价值的脱贫发展计划，）"></a>第三步，测试场景的功能服务，愿景（选择一个贫困的村庄，每家投放一个产品，记录下他们的生活方式，劳动成果，劳动价值，劳动特色，劳动潜能等。从而大数据分析出提高劳动价值的脱贫发展计划，）</h3></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一个有梦想的-idea-是需要长久计划的，结合当下自己的给定条件进行实施。&quot;&gt;&lt;a href=&quot;#一个有梦想的-idea-是需要长久计划的，结合当下自己的给定条件进行实施。&quot; class=&quot;headerlink&quot; title=&quot;一个有梦想的 idea 是需要长久计
      
    
    </summary>
    
      <category term="一个有梦想的 idea" scheme="http://cczzrs.me/categories/%E4%B8%80%E4%B8%AA%E6%9C%89%E6%A2%A6%E6%83%B3%E7%9A%84-idea/"/>
    
    
      <category term="梦想" scheme="http://cczzrs.me/tags/%E6%A2%A6%E6%83%B3/"/>
    
      <category term="idea" scheme="http://cczzrs.me/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Hexo</title>
    <link href="http://cczzrs.me/Hexo/Hexo/"/>
    <id>http://cczzrs.me/Hexo/Hexo/</id>
    <published>2019-04-22T21:03:07.000Z</published>
    <updated>2019-04-22T21:03:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hexo&quot;&gt;&lt;a href=&quot;#Hexo&quot; class=&quot;headerlink&quot; title=&quot;Hexo&quot;&gt;&lt;/a&gt;Hexo&lt;/h2&gt;
      
    
    </summary>
    
      <category term="Hexo" scheme="http://cczzrs.me/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://cczzrs.me/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://cczzrs.me/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/hello-world/"/>
    <id>http://cczzrs.me/博客搭建/hello-world/</id>
    <published>2019-04-16T19:52:15.000Z</published>
    <updated>2019-04-21T21:09:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="博客搭建" scheme="http://cczzrs.me/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="npm" scheme="http://cczzrs.me/tags/npm/"/>
    
      <category term="hexo" scheme="http://cczzrs.me/tags/hexo/"/>
    
      <category term="github" scheme="http://cczzrs.me/tags/github/"/>
    
  </entry>
  
</feed>
